<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.mapper.mysql.UserFollowMapper">
    <sql id="table_name">
        user_follow
    </sql>

    <sql id="short_name">
        uf
    </sql>
    <sql id="columns">
        user_id,following_user_id,created_at,updated_at,user_name,followed_name
    </sql>
    <sql id="columnsWithShortName">
        uf.id ufId, uf.user_id ufUserId, uf.following_user_id ufFollowingUserId, uf.created_at ufCreatedAt, uf.updated_at ufUpdatedAt, uf.user_name ufUserName, uf.followed_name ufFollowedName
    </sql>
    <sql id="insert_values">
        #{userId},
                #{followingUserId},
                CURRENT_TIMESTAMP,
                CURRENT_TIMESTAMP,
                #{userName},
                #{followedName}
    </sql>
    <sql id="batch_insert_values">
        #{item.userId},
                #{item.followingUserId},
                CURRENT_TIMESTAMP,
                CURRENT_TIMESTAMP,
                #{item.userName},
                #{item.followedName}
    </sql>
    <resultMap id="result" type="com.cn.entity.UserFollow">
        <result property="id" column="ufId"/>
        <result property="userId" column="ufUserId"/>
        <result property="followingUserId" column="ufFollowingUserId"/>
        <result property="createdAt" column="ufCreatedAt"/>
        <result property="updatedAt" column="ufUpdatedAt"/>
        <result property="userName" column="ufUserName"/>
        <result property="followedName" column="ufFollowedName"/>
    </resultMap>

    <insert id="insert" parameterType="com.cn.entity.UserFollow" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO
        <include refid="table_name">
        </include>
        ( <include refid="columns">
    </include> )
        VALUES ( <include refid="insert_values">
    </include> )
    </insert>

    <insert id="insertBatch" parameterType="com.cn.entity.UserFollow" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO
        <include refid="table_name">
        </include>
        (<include refid="columns">
    </include>) values
        <foreach collection="list" item="item" index="index" separator=",">
            (<include refid="batch_insert_values">
        </include>)
        </foreach>
    </insert>

    <select id="selectById" parameterType="int" resultMap="result">
        select
        <include refid="columnsWithShortName">
        </include>
        from
        <include refid="table_name">
        </include>
        <include refid="short_name">
        </include>
        where <include refid="short_name">
    </include>.id = #{id}
    </select>
    <select id="selectByCondition" resultMap="result">
        select
        <include refid="columnsWithShortName"/>
        from
        <include refid="table_name"/>
        <include refid="short_name"/>
        <where>
            <if test="userId!=null and userId > 0">
                user_id = #{userId}
            </if>
            <if test="followingUserId!=null and followingUserId > 0">
                and following_user_id = #{followingUserId}
            </if>
            <if test="userName!=null">
                and user_name = #{userName}
            </if>
            <if test="followedName!=null">
                and followed_name = #{followedName}
            </if>
        </where>
    </select>
    <update id="updateById">
        update
        <include refid="table_name">
        </include>
        <set>
            <if test="userId!=null">
                user_id = #{userId},
            </if>
            <if test="followingUserId!=null">
                following_user_id = #{followingUserId},
            </if>
            <if test="userName!=null">
                user_name = #{userName},
            </if>
            <if test="followedName!=null">
                followed_name = #{followedName},
            </if>
            updated_at = CURRENT_TIMESTAMP
        </set>
        <where>
            id = #{id}
        </where>
    </update>
    <delete id="deleteById">
        delete from
        <include refid="table_name"/>
        where id = #{id}
    </delete>
    <delete id="deleteWithUserIdAndFollowingUserId">
        delete from
        <include refid="table_name"/>
        where
        user_id = #{userId}
        and
        following_user_id = #{followingUserId}
    </delete>
</mapper>